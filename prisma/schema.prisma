// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id            String @id @default(uuid())
email         String @unique
nome          String?
sobre_nome    String?
senha         String
is_admin      Boolean @default(false)
@@map("users")
}

model Evento {
id                    String @id @default(uuid())
nome                  String
data                  DateTime
local                 String
descricao             String?
categoria_eventos     CategoriaEvento[]
ingressos             Ingresso[]
@@map("eventos")
}

model CategoriaEvento {
id                  String @id @default(uuid())
tipo_cat_evento     String
evento              Evento @relation(fields: [eventoId], references: [id])
eventoId            String
@@map("categoria_eventos")
}

model Ingresso {
id                      String @id @default(uuid())
quantidade_ingresso     Int
valor                   Float
evento                  Evento @relation(fields: [eventoId], references: [id])
eventoId                String
categoria_ingressos     CategoriaIngresso[]
lote_ingressos          LoteIngresso[]
vendas                  Venda[]
@@map("ingressos")
}

model CategoriaIngresso {
id                    String @id @default(uuid())
tipo_cat_ingresso     String
ingresso              Ingresso @relation(fields: [ingressoId], references: [id])
ingressoId            String
@@map("categoria_ingressos")
}

model LoteIngresso {
id                    String @id @default(uuid())
descricao_lote        String
ingresso              Ingresso @relation(fields: [ingressoId], references: [id])
ingressoId            String
@@map("lote_ingressos")
}

model Cliente {
id            String @id @default(uuid())
email         String @unique
nome          String?
sobre_nome    String?
idade         Int
endereco      String
venda         Venda @relation(fields: [vendaid], references: [id])
vendaid            String
@@map("clientes")
}

model Venda {
id                      String @id @default(uuid())
quantidade_ingresso     Int
valor                   Float
desconto                Float
data_venda              DateTime
ingresso                Ingresso @relation(fields: [ingressoId], references: [id])
ingressoId              String
clientes                Cliente[]
@@map("vendas")
}
